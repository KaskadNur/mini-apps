const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 10000;

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather
const BOT_TOKEN = process.env.BOT_TOKEN || '7591449691:AAGEsdfrNCgijjCgDwLPRaZ04rlU_UDxJys';
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ë–î)
const userPoints = new Map();

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json());

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Web App
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.get('/api/user/:userId/points', (req, res) => {
    const userId = req.params.userId;
    const points = userPoints.get(userId) || 0;
    res.json({ userId, points });
});

// API –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
app.post('/api/user/:userId/add-points', (req, res) => {
    const userId = req.params.userId;
    const points = req.body.points || 10;
    
    const currentPoints = userPoints.get(userId) || 0;
    userPoints.set(userId, currentPoints + points);
    
    res.json({ 
        userId, 
        pointsAdded: points, 
        totalPoints: userPoints.get(userId) 
    });
});

// Health check
app.get('/health', (req, res) => {
    res.status(200).json({ status: 'OK', timestamp: new Date().toISOString() });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const webAppUrl = 'https://telegram-hello-app.onrender.com';
    
    const keyboard = {
        inline_keyboard: [[
            {
                text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                web_app: { url: webAppUrl }
            }
        ]]
    };
    
    bot.sendMessage(chatId, 'üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å:', {
        reply_markup: keyboard
    });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
bot.on('message', (msg) => {
    if (msg.web_app_data) {
        try {
            const data = JSON.parse(msg.web_app_data.data);
            console.log('–î–∞–Ω–Ω—ã–µ –∏–∑ Web App:', data);
            
            if (data.action === 'ad_watched') {
                const points = data.points || 10;
                const userId = data.user_id;
                
                // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–ª–ª—ã –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∫–ª–∞–º—ã
                const currentPoints = userPoints.get(userId) || 0;
                userPoints.set(userId, currentPoints + points);
                
                bot.sendMessage(
                    msg.chat.id, 
                    `üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${points} –±–∞–ª–ª–æ–≤ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∫–ª–∞–º—ã!\n–í—Å–µ–≥–æ –±–∞–ª–ª–æ–≤: ${userPoints.get(userId)}`
                );
            } else {
                bot.sendMessage(msg.chat.id, `üëã –ü—Ä–∏–≤–µ—Ç! –ö–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ ${data.count || 1} —Ä–∞–∑`);
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.on('error', (error) => {
    console.log('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üåê Web App –¥–æ—Å—Ç—É–ø–µ–Ω: https://telegram-hello-app.onrender.com`);
});
